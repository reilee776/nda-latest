# Target output
TARGET = nda-pam.so

# Source and object files
PAM_MODULE_SRC = nd_nix_pam.c
ND_UTILS_C = ./libsrc/nd_utils.c
ND_UTILS_H = ./libsrc/nd_utils.h
ND_LOGS_C = ./libsrc/nd_nix_logs.c
ND_LOGS_H = ./libsrc/nd_nix_logs.h
ND_RESTAPI_C = ./libsrc/nd_restapi_func.c
ND_RESTAPI_H = ./libsrc/nd_restapi_func.h

SRCS = $(PAM_MODULE_SRC) $(ND_UTILS_C) $(ND_LOGS_C) $(ND_RESTAPI_C)
HEADERS = $(ND_UTILS_H) $(ND_LOGS_H) $(ND_RESTAPI_H)
OBJS = $(SRCS:.c=.o)

# Compiler and Linker flags
CC = gcc
CFLAGS = -fPIC -Wall -Werror -O2 \
         -Wno-unused-variable \
         -Wno-unused-but-set-variable \
         -Wno-parentheses \
         -Wno-return-type \
         -Wno-unused-label \
         -Wno-missing-braces \
         -Wno-implicit-function-declaration
LDFLAGS = -shared
LIBS = -lpam -lcurl -lssl -lcrypto -ljson-c

# Custom library path
CUSTOM_LIB_PATH = /hiagt/lib/nda-pam

# Add rpath option to linker flags
LDFLAGS += -Wl,-rpath,$(CUSTOM_LIB_PATH)

# Default target
all: $(TARGET)

# Build shared object
$(TARGET): $(OBJS)
	$(CC) $(LDFLAGS) $(OBJS) $(LIBS) -o $@

# Compile source files
%.o: %.c $(HEADERS)
	$(CC) $(CFLAGS) -std=c99 -c $< -o $@

# Clean up generated files
clean:
	rm -f $(OBJS) $(TARGET)

.PHONY: all clean

